{
  "stats": {
    "suites": 2,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2024-02-24T20:19:10.223Z",
    "end": "2024-02-24T20:19:14.499Z",
    "duration": 4276,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bfba8f23-9826-4c80-b745-f091737d9045",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "662846b7-43bf-411b-9d5a-ae4f98ee07c0",
          "title": "Authorization",
          "fullFile": "E:\\Sanbercode\\mocha-api-automation\\test\\spec\\getUser.js",
          "file": "\\test\\spec\\getUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Negative Case - Registrtion User Status Code must != 201",
              "fullTitle": "Authorization Negative Case - Registrtion User Status Code must != 201",
              "timedOut": false,
              "duration": 999,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = \n{\n\"name\":\"\",\n\"email\":\"\",\n\"password\":\"\"\n}\n\nconst response = await request\n.post('/registration')\n.send(data)\nexpect(await response.statusCode).not.to.eql(201)",
              "err": {},
              "uuid": "42e934d0-3c84-4101-ba27-df4e4d04502e",
              "parentUUID": "662846b7-43bf-411b-9d5a-ae4f98ee07c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration User Status Code must == 201",
              "fullTitle": "Authorization Registration User Status Code must == 201",
              "timedOut": false,
              "duration": 501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = \n{\n\"name\":\"helda\",\n\"email\":\"helda@mail.com\",\n\"password\":\"helda123\"\n}\n\nconst response = await request\n.post('/registration')\n.send(data)\nexpect(await response.statusCode).to.eql(201)\nexpect(await response.body.data.name).to.eql(\"helda\")",
              "err": {},
              "uuid": "cc49c79f-7538-4c49-957a-0eb8e96cbf9b",
              "parentUUID": "662846b7-43bf-411b-9d5a-ae4f98ee07c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative Case - Login User Status Code must != 201",
              "fullTitle": "Authorization Negative Case - Login User Status Code must != 201",
              "timedOut": false,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data =\n{\n    \"email\":\"\",\n    \"password\":\"\"\n}\nconst response = await request\n.post('/authentications')\n.send(data)\nconsole.log(\"Login Status Code : \",response.statusCode)\nexpect(await response.statusCode).not.to.eql(201)",
              "err": {},
              "uuid": "d957235e-9baa-4985-aa32-ac649536fc1e",
              "parentUUID": "662846b7-43bf-411b-9d5a-ae4f98ee07c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login User Status Code must == 200",
              "fullTitle": "Authorization Login User Status Code must == 200",
              "timedOut": false,
              "duration": 528,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data =\n{\n    \"email\":\"helda@mail.com\",\n    \"password\":\"helda123\"\n}\nconst response = await request\n.post('/authentications')\n.send(data)\ntoken = await response.body.data.accessToken\nconsole.log(\"Login Status Code : \",response.statusCode)\nexpect(await response.statusCode).to.eql(201)",
              "err": {},
              "uuid": "30eb9e51-02db-45da-87d5-2ccff57b44ff",
              "parentUUID": "662846b7-43bf-411b-9d5a-ae4f98ee07c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42e934d0-3c84-4101-ba27-df4e4d04502e",
            "cc49c79f-7538-4c49-957a-0eb8e96cbf9b",
            "d957235e-9baa-4985-aa32-ac649536fc1e",
            "30eb9e51-02db-45da-87d5-2ccff57b44ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2275,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "73e82181-6966-4bc2-b5d7-1e62d0b82bff",
          "title": "User",
          "fullFile": "E:\\Sanbercode\\mocha-api-automation\\test\\spec\\getUser.js",
          "file": "\\test\\spec\\getUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Negative Case - Create User",
              "fullTitle": "User Negative Case - Create User",
              "timedOut": false,
              "duration": 208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n.post(epUser)\n.send(body).set({\n   Authorization: `Bearer null`\n})\nif(await response.statusCode == 201){\n   userId = await response.body.data.userId\n}\nconsole.log(await response.body.message)\nexpect(await response.statusCode).not.to.eql(201)",
              "err": {},
              "uuid": "bfe10727-00aa-4920-b398-fdcf35eb7f3e",
              "parentUUID": "73e82181-6966-4bc2-b5d7-1e62d0b82bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create User",
              "fullTitle": "User Create User",
              "timedOut": false,
              "duration": 528,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n.post(epUser)\n.send(body).set({\n   Authorization: `Bearer ${token}`\n})\nconsole.log(\"data: \",await response.body.data)\nif(await response.statusCode == 201){\n   userId = await response.body.data.userId\n}\nexpect(await response.statusCode).to.eql(201)",
              "err": {},
              "uuid": "b718596b-9dcb-41ff-9241-25c6f69e74bc",
              "parentUUID": "73e82181-6966-4bc2-b5d7-1e62d0b82bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative Case - Get User Detail",
              "fullTitle": "User Negative Case - Get User Detail",
              "timedOut": false,
              "duration": 195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request.get(`${epUser}/invalidId`).set({\n    ContentType: 'application/json',\n    Authorization: `Bearer ${token}`\n})\nconsole.log(await response.body.message)\nexpect(await response.statusCode).not.to.eql(200)",
              "err": {},
              "uuid": "bb5c5ea8-f4f5-4169-a1fa-1d8cc34b10f3",
              "parentUUID": "73e82181-6966-4bc2-b5d7-1e62d0b82bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get User Detail",
              "fullTitle": "User Get User Detail",
              "timedOut": false,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request.get(`${epUser}/${userId}`).set({\n    ContentType: 'application/json',\n    Authorization: `Bearer ${token}`\n})\nconsole.log(\"data: \",await response.body.data.user)\nexpect(await response.statusCode).to.eql(200)",
              "err": {},
              "uuid": "2605ad93-e4f7-4c9f-9c1d-d068f8769063",
              "parentUUID": "73e82181-6966-4bc2-b5d7-1e62d0b82bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative Case - Update User",
              "fullTitle": "User Negative Case - Update User",
              "timedOut": false,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const dataUpdate =\n{\n    \"name\":\"karina\",\n    \"email\": \"\"\n}\nconst response = await request.put(`${epUser}/${userId}`)\n.send(dataUpdate)\n.set({\n    ContentType: 'application/json',\n    Authorization: `Bearer ${token}`\n})\nconsole.log(await response.body.message)\nexpect(await response.statusCode).not.to.eql(200)",
              "err": {},
              "uuid": "42fdda28-182d-4213-ac34-9006bb99d9d4",
              "parentUUID": "73e82181-6966-4bc2-b5d7-1e62d0b82bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update User",
              "fullTitle": "User Update User",
              "timedOut": false,
              "duration": 186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const dataUpdate =\n{\n    \"name\":\"karina\",\n    \"email\": \"helda@mail.com\"\n}\nconst response = await request.put(`${epUser}/${userId}`)\n.send(dataUpdate)\n.set({\n    ContentType: 'application/json',\n    Authorization: `Bearer ${token}`\n})\nconsole.log(await response.body.message)\nexpect(await response.statusCode).to.eql(200)\nexpect(await response.body.data.name).to.eql(dataUpdate.name)",
              "err": {},
              "uuid": "a4fd6c30-e901-4551-90b5-21196bc2fd3a",
              "parentUUID": "73e82181-6966-4bc2-b5d7-1e62d0b82bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative Case - Delete User",
              "fullTitle": "User Negative Case - Delete User",
              "timedOut": false,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request.delete(`${epUser}/invalidId`)\n        .set({\n            Authorization: `Bearer ${token}`\n        })\n        console.log(await response.body.message)\n        expect(await response.statusCode).not.to.eql(200)",
              "err": {},
              "uuid": "cae96652-0b8a-4461-95bc-832db9c58a60",
              "parentUUID": "73e82181-6966-4bc2-b5d7-1e62d0b82bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete User",
              "fullTitle": "User Delete User",
              "timedOut": false,
              "duration": 226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request.delete(`${epUser}/${userId}`)\n        .set({\n            Authorization: `Bearer ${token}`\n        })\n        console.log(await response.body.message)\n        expect(await response.statusCode).to.eql(200)",
              "err": {},
              "uuid": "70d22c37-712b-468f-99d2-970b858e4948",
              "parentUUID": "73e82181-6966-4bc2-b5d7-1e62d0b82bff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bfe10727-00aa-4920-b398-fdcf35eb7f3e",
            "b718596b-9dcb-41ff-9241-25c6f69e74bc",
            "bb5c5ea8-f4f5-4169-a1fa-1d8cc34b10f3",
            "2605ad93-e4f7-4c9f-9c1d-d068f8769063",
            "42fdda28-182d-4213-ac34-9006bb99d9d4",
            "a4fd6c30-e901-4551-90b5-21196bc2fd3a",
            "cae96652-0b8a-4461-95bc-832db9c58a60",
            "70d22c37-712b-468f-99d2-970b858e4948"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}